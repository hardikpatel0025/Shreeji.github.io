@page "/register"

<PageTitle>New user</PageTitle>

<FluentLabel Typo="Typography.PageTitle">Register</FluentLabel>

<FluentCard Style="margin: 16px 0px; padding: 16px; width: 600px; height: 600px;">

    <FluentLabel Style="margin-bottom: 24px;">
        Let's get you all set up so you can verify your personal account and begin
        setting up your profile.
    </FluentLabel>

    <EditForm Model="@Data" OnValidSubmit="ValidHandlerAsync">
        <FluentTextField Label="First name: *"
                         Placeholder="Enter your first name"
                              Required
                          @bind-Value="@Data.FistName" />
         <FluentTextField Label="Last name:"
                          Placeholder="Enter your last name"
                          @bind-Value="@Data.LastName" />
         <FluentDatePicker Label="Birth date:"
                           @bind-Value="@Data.BirthDate" />
         <FluentTextField Label="EMail: *"
                          TextFieldType="TextFieldType.Email"
                              Required
                          Placeholder="Enter your email"
                          @bind-Value="@Data.Email" />

         <div class="form-group input-photo__group">
             <div>@mimetype</div>
            <div>
                <label for="Photo">Photo: </label>
                @if (clientPhoto != null)
                {
                    <img form="Photo" alt="client-photo" class="form__client-photo" style="margin:0 0 2px 5px;" src="data:image/png;base64,@(Convert.ToBase64String(clientPhoto))" />
                }
            </div>
            <InputFile class="image_input form-control" OnChange="@loadImage" />
        </div>
        <div style="margin: 24px 0px;" />
         <FluentCheckbox Label="I agree to all terms, conditions, privacy policy."
                         @bind-Value="@AcceptToCreate" />
         
        <div style="margin: 24px 0px;" />
         <FluentButton Appearance="Appearance.Accent"
                       Loading="@Loading"
                       OnClick="@Createuser"
                       Disabled="@(!AcceptToCreate)"
                       Type="ButtonType.Submit">
             Create account
         </FluentButton>
     </EditForm>
 </FluentCard>

@code {
    private Register Data = new();
    private bool AcceptToCreate = false;
    private bool Loading = false;
    bool isLoading = false;
    IBrowserFile selectedImage;
    String mimetype = "";
    byte[] clientPhoto;
    Register register = new();
    int newUsertId;

    private async Task ValidHandlerAsync()
    {
        Loading = true;

        // Simulate asynchronous loading
        await Task.Delay(1000);

        Loading = false;
    }
    public async Task loadImage(InputFileChangeEventArgs e)
    {
        selectedImage = e.File;
        Regex rx = new Regex(@"^image.*");
        MatchCollection matches = rx.Matches(selectedImage.ContentType);
        if (matches.Count == 0)
        {
            //ShowToast(MatToastType.Danger, "Error", $"Invalid file format.");
        }
        else
        {
            MemoryStream stream = new MemoryStream();
            await selectedImage.OpenReadStream().CopyToAsync(stream);

            long length = selectedImage.Size;
            clientPhoto = new byte[length];
            clientPhoto = stream.ToArray();
        }
    }
    protected void Createuser()
    {

        DateTime current_date = DateTime.Now;

        register.BirthDate = current_date;
        register.Photo = clientPhoto;
       
        newUsertId = registerSevice.AddNewUser(register);

        //ShowToast(MatToastType.Success, "Success", $"Client added successfully.");
        NavigationManager.NavigateTo("home");
    }
}