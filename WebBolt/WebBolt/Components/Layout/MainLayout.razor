@inherits LayoutComponentBase

<FluentDesignTheme Mode="DesignThemeModes.Light" OfficeColor="OfficeColor.Teams">
    <FluentLayout>
        <FluentHeader>
            WebBolt
            <FluentSpacer />
            <FluentNavLink Href="/" Style="margin-right:10px;">Login</FluentNavLink>
            <FluentNavLink Href="/" Style="margin-right:10px;">Login</FluentNavLink>
            <FluentNavLink Href="/" Style="margin-right:10px;">Login</FluentNavLink>
            <FluentNavLink Href="/" Style="margin-right:10px;">Login</FluentNavLink>
        </FluentHeader>
        
        <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
            <NavMenu />
            <FluentBodyContent>
                <div class="content">
                    @Body
                </div>
            </FluentBodyContent>
        </FluentStack>
        <FluentFooter>
            <div class="link1">
                <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
            </div>
            <div class="link2">
                <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
            </div>
        </FluentFooter>
    </FluentLayout>
</FluentDesignTheme>`
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    public int loggedIn { get; set; } = 0;
    public int isClientUser { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        loggedIn = await sessionStorage.GetItemAsync<int>("loggedIn");
        if (loggedIn == 1)
        {
            isClientUser = await sessionStorage.GetItemAsync<int>("userType");
        }
        else
        {
            isClientUser = await sessionStorage.GetItemAsync<int>("userType");
        }
        StateHasChanged();
    }
    private async Task Logout()
    {
        await sessionStorage.SetItemAsync("loggedIn", 0);
        loggedIn = 0;
        StateHasChanged();
        NavigationManager.NavigateTo("/login");
    }
}